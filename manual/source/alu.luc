module alu (
    input x[16],
    input y[16],
    input op[6],
    output s[16],
    output z,
    output v,
    output n
  ) {
  
  sixteen_bit_full_adder adder;
  shifter16 shifter;
  boolean boolean;
  comp compare;
  sixteen_bit_multiplier multiplier;
 

  always {
    adder.op = op;
    adder.x = x;
    adder.y = y;
    
    z = adder.z;
    v = adder.v;
    n = adder.n;
    
    
    compare.op = op;
    compare.z = adder.z;
    compare.v = adder.v;
    compare.n = adder.n;
    
    boolean.op = op;
    boolean.a = x;
    boolean.b = y;
    
    shifter.op = op;
    shifter.x = x;
    shifter.y = y;
    
    multiplier.x = x;
    multiplier.y = y;
    
    case(op){
      b000000 : s= adder.s;
      b000001: s= adder.s;
      b001000 : s= boolean.s ;
      b001110 : s= boolean.s;
      b000110 : s= boolean.s;
      b001010 : s= boolean.s;
      b100000 : s= shifter.s;
      b100001 : s= shifter.s;
      b100011 : s= shifter.s;
      b000010 : s= multiplier.p;
      b110011 : s= compare.out;
      b110101 : s= compare.out;
      b110111 : s= compare.out;
      default : s= 16hdead;
  }
      
}
