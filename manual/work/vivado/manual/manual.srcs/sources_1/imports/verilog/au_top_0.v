/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip,
    output reg [3:0] zvns
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [(3'h5+0)-1:0] M_buttoncond_out;
  reg [(3'h5+0)-1:0] M_buttoncond_in;
  
  genvar GEN_buttoncond0;
  generate
  for (GEN_buttoncond0=0;GEN_buttoncond0<3'h5;GEN_buttoncond0=GEN_buttoncond0+1) begin: buttoncond_gen_0
    button_conditioner_2 buttoncond (
      .clk(clk),
      .in(M_buttoncond_in[GEN_buttoncond0*(1)+(1)-1-:(1)]),
      .out(M_buttoncond_out[GEN_buttoncond0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  reg [15:0] M_store_s_d, M_store_s_q = 1'h0;
  reg [2:0] M_store_zvn_d, M_store_zvn_q = 1'h0;
  reg [0:0] M_store_s_wrong_d, M_store_s_wrong_q = 1'h0;
  wire [7-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [16-1:0] M_seg_values;
  multi_seven_seg_3 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  wire [3-1:0] M_alu_manual_zvn;
  wire [16-1:0] M_alu_manual_s;
  reg [1-1:0] M_alu_manual_abutton;
  reg [1-1:0] M_alu_manual_bbutton;
  reg [6-1:0] M_alu_manual_alufn;
  reg [16-1:0] M_alu_manual_value;
  alu_manual_4 alu_manual (
    .clk(clk),
    .rst(rst),
    .abutton(M_alu_manual_abutton),
    .bbutton(M_alu_manual_bbutton),
    .alufn(M_alu_manual_alufn),
    .value(M_alu_manual_value),
    .zvn(M_alu_manual_zvn),
    .s(M_alu_manual_s)
  );
  wire [6-1:0] M_alu_auto_alufn;
  wire [8-1:0] M_alu_auto_checkoff;
  wire [4-1:0] M_alu_auto_flag;
  wire [16-1:0] M_alu_auto_s;
  reg [1-1:0] M_alu_auto_button;
  alu_auto_5 alu_auto (
    .clk(clk),
    .rst(rst),
    .button(M_alu_auto_button),
    .alufn(M_alu_auto_alufn),
    .checkoff(M_alu_auto_checkoff),
    .flag(M_alu_auto_flag),
    .s(M_alu_auto_s)
  );
  
  always @* begin
    M_store_s_wrong_d = M_store_s_wrong_q;
    M_store_s_d = M_store_s_q;
    M_store_zvn_d = M_store_zvn_q;
    
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    M_alu_manual_abutton = M_buttoncond_out[0+0-:1];
    M_alu_manual_bbutton = M_buttoncond_out[1+0-:1];
    M_alu_auto_button = M_buttoncond_out[4+0-:1];
    zvns[1+2-:3] = M_store_zvn_q;
    zvns[0+0-:1] = M_store_s_wrong_q;
    if (io_dip[16+0+0-:1] == 1'h0) begin
      M_store_zvn_d = M_alu_manual_zvn;
      M_store_s_d = M_alu_manual_s;
      io_led[8+0+7-:8] = io_dip[8+0+7-:8];
      io_led[0+0+7-:8] = io_dip[0+0+7-:8];
      io_led[16+2+5-:6] = io_dip[16+2+5-:6];
    end else begin
      M_store_zvn_d = M_alu_auto_flag[1+2-:3];
      M_store_s_d = M_alu_auto_s;
      M_store_s_wrong_d = M_alu_auto_flag[0+0-:1];
      io_led[8+7-:8] = M_alu_auto_checkoff;
      io_led[16+2+5-:6] = M_alu_auto_alufn;
    end
    M_alu_manual_alufn = io_dip[16+2+5-:6];
    M_alu_manual_value[8+7-:8] = io_dip[8+0+7-:8];
    M_alu_manual_value[0+7-:8] = io_dip[0+0+7-:8];
    M_buttoncond_in = io_button;
    M_seg_values = {M_store_s_q[12+3-:4], M_store_s_q[8+3-:4], M_store_s_q[4+3-:4], M_store_s_q[0+3-:4]};
    io_seg = ~M_seg_seg;
    io_sel = ~M_seg_sel;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_store_zvn_q <= 1'h0;
    end else begin
      M_store_zvn_q <= M_store_zvn_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_store_s_q <= 1'h0;
    end else begin
      M_store_s_q <= M_store_s_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_store_s_wrong_q <= 1'h0;
    end else begin
      M_store_s_wrong_q <= M_store_s_wrong_d;
    end
  end
  
endmodule
